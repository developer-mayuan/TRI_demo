function generateJsonData(OBD_data, step_size)

foo = load('../output/linkList.mat');
linkList = foo.linkList;

assert(size(linkList, 1) == floor(size(OBD_data, 1) / 100), ...
    "data lentgh is different");

OBD_json = '[';

for i = 1 : floor(size(OBD_data, 1) / step_size)
    OBD_json = [OBD_json '{"time": ' OBD_data{i * step_size, 1} ...
        ',"speed": ' OBD_data{i * step_size, 2} ...
        ', "frame_index": ' OBD_data{i * step_size, 3} ...
        ', "lati": ' OBD_data{i * step_size, 5} ...
        ', "longi": ' OBD_data{i * step_size, 4} ...
        ', "linkID": ', num2str(linkList{i, 1}) ...
        '},'];
end

% add the last row
OBD_json = [OBD_json '{"time": ' OBD_data{end, 1} ...
    ',"speed": ' OBD_data{end, 2} ...
    ', "frame_index": ' OBD_data{end, 3} ...
    ', "lati": ' OBD_data{end, 5} ...
    ', "longi": ' OBD_data{end, 4} ...
    ', "linkID": ', num2str(linkList{end, 1}) ...
    '}]'];

handle = fopen('../output/OBD.json', 'w');
fprintf(handle, OBD_json);
fclose(handle);
%
end